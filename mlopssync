#!/bin/bash

#--
#-- CS/DS 553 MLOps
#-- Poll the host/container given to our group to discover if it has been
#--    restarted/wiped
#-- If it has been restarted, update host with
#--    Users, SSH public keys, and startup scripts
#--
#-- Assumptions:
#--    1) If I have an account with sudo access, system is stable
#--    2) If system has been rebooted, that means it has been wiped
#--    3) If system has been wiped, it has been restored to the original
#--       state that it was in when presented to the class on 2024-09-16
#--       This includes:
#--       a) A user account "student-admin"
#--       b) That account has sudo permission
#--       c) A public key is stored in /home/student-admin/.ssh/authorized_keys
#--

#-- Initialize
mlopshost=paffenroth-23.dyn.wpi.edu
mlopsport=22002
mlopsadmin=student-admin
mlopskey=~/.ssh/${mlopsadmin}_key

echo; echo "`date` - Starting..."

#--
#-- How many seconds has host been up
#--    The file /proc/uptime shows the seconds host has been up and idle
#--       238021.69 237923.64
#--    Extract the first value (seconds up)
#--    Remove decimal part (sed 's/\..*//')
#--

#-- Use personal account to find out how long host has been up
secsup=`ssh -p $mlopsport $mlopshost "head -1 /proc/uptime | sed 's/\..*//'" 2> /dev/null`

#-- If seconds up is blank, my personal account no longer has access
if [ "$secsup" == "" ]; then

   #-- Use default account to find out how long host has been up
   secsup=`ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "head -1 /proc/uptime | sed 's/\..*//'" 2> /dev/null`

fi

#-- If uptime is under five minutes (300 seconds), restore users and keys
if (( $secsup < 30000 )); then

   #-- Create authorized_keys file with Andrew's and Jake's public keys to access student-admin account
   echo "#Default user" > /tmp/authorized_keys
   #cat ~/.ssh/student-admin_key.pub | sed 's/^/#/' >> /tmp/authorized_keys
   cat ~/.ssh/student-admin_key.pub >> /tmp/authorized_keys
   echo "#Andrew" >> /tmp/authorized_keys
   cat ~/.ssh/id_rsa.pub >> /tmp/authorized_keys
   echo "#Jake" >> /tmp/authorized_keys
   cat ~/.ssh/jake.pub >> /tmp/authorized_keys
   chmod 600 /tmp/authorized_keys

   #-- Put Andrew's and Jake's public keys into default user's authorized_keys
   scp -p -i $mlopskey -P $mlopsport /tmp/authorized_keys $mlopsadmin@$mlopshost:.ssh/authorized_keys

   #-- Create accounts for Andrew and Jake
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo adduser andrew < /dev/null > /dev/null 2>&1"
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo adduser jake < /dev/null > /dev/null 2>&1"

   #-- Add Andrew (but not Jake because I don't trust him) to the sudo group
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo usermod -aG sudo andrew"

   #-- Create directories for user's private SSH keys
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo mkdir /home/{andrew,jake}/.ssh"

   #-- Temporarily change owner to student admin account
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo chown -R student-admin:student-admin /home/{andrew,jake}"

   #-- Put SSH public keys in place for Andrew and Jake to access their owh accounts
   scp -p -i $mlopskey -P $mlopsport ~/.ssh/id_rsa.pub $mlopsadmin@$mlopshost:/home/andrew/.ssh/authorized_keys
   scp -p -i $mlopskey -P $mlopsport ~/.ssh/jake.pub $mlopsadmin@$mlopshost:/home/jake/.ssh/authorized_keys

   #-- Restrict permission to make SSH keys usable
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo chmod 700 /home/{andrew,jake}/{,.ssh}
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo chmod 600 /home/{andrew,jake}/.ssh/authorized_keys

   #-- Set ownership to correct users
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo chown -R andrew:andrew /home/andrew"
   ssh -i $mlopskey -p $mlopsport $mlopsadmin@$mlopshost "sudo chown -R jake:jake /home/jake"

   #-- Copy Andrew's startup scripts to default user account
   #scp -p ~/.{alias,tcshrc} -P $mlopsport $mlopshost:

else
   echo "Host has been up for $secsup seconds."

fi

